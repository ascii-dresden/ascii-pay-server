events {

}

http {

    server {
        listen	80;
        client_max_body_size 10M;

        server_name pay.ascii.local;

        location /api/ {
            # Preflighted requestis
            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }

            # CORS WHITELIST EVERYTHING
            # This is allowing everything because I am running
            # locally so there should be no security issues.
            if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            }

            proxy_pass "http://server:8080/api/";
            proxy_set_header        X-Client-Cert false;
        }
        location /v1/ {
            # Preflighted requestis
            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }

            # CORS WHITELIST EVERYTHING
            # This is allowing everything because I am running
            # locally so there should be no security issues.
            if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            }

            proxy_pass "http://server:8080/v1/";
            proxy_set_header        X-Client-Cert false;
        }

        location / {
            proxy_pass "http://host.docker.internal:3000/";
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }

    server {
        listen	80;
        client_max_body_size 10M;

        server_name secure-pay.ascii.local;

        location /api/ {
            # Preflighted requestis
            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }

            # CORS WHITELIST EVERYTHING
            # This is allowing everything because I am running
            # locally so there should be no security issues.
            if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            }

            proxy_pass "http://server:8080/api/";
            proxy_set_header        X-Client-Cert true;
        }
        location /v1/ {
            # Preflighted requestis
            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }

            # CORS WHITELIST EVERYTHING
            # This is allowing everything because I am running
            # locally so there should be no security issues.
            if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            }

            proxy_pass "http://server:8080/v1/";
            proxy_set_header        X-Client-Cert true;
        }

        location / {
            proxy_pass "http://host.docker.internal:3000/";
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
        # location / {
        #     # Preflighted requestis
        #     if ($request_method = OPTIONS) {
        #         add_header "Access-Control-Allow-Origin" *;
        #         add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
        #         add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        #         return 200;
        #     }

        #     # CORS WHITELIST EVERYTHING
        #     # This is allowing everything because I am running
        #     # locally so there should be no security issues.
        #     if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
        #         add_header "Access-Control-Allow-Origin" *;
        #         add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        #     }
        #     grpc_pass "grpc://server:8081/";
        #     proxy_set_header        X-Client-Cert true;
        # }
    }
}

# vim: syntax=nginx
