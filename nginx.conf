events {

}

http {

    server {
        listen              443 ssl http2;
        server_name         pay.ascii.local;
        ssl_certificate     /etc/ssl/pay.ascii.local.crt;
        ssl_certificate_key /etc/ssl/pay.ascii.local.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        client_max_body_size 10M;

        location /api/ {
            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }
            if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            }

            proxy_pass "http://server:8080/api/";
            proxy_set_header X-Client-Cert false;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
        location /v1/ {
            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }
            if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            }

            proxy_pass "http://server:8080/v1/";
            proxy_set_header X-Client-Cert false;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        location / {
            proxy_pass "http://host.docker.internal:3000/";
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }

    server {
        listen              443 ssl http2;
        server_name         secure-pay.ascii.local;
        ssl_certificate     /etc/ssl/secure-pay.ascii.local.crt;
        ssl_certificate_key /etc/ssl/secure-pay.ascii.local.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        client_max_body_size 10M;

        location /api/ {
            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }
            if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            }

            proxy_pass "http://server:8080/api/";
            proxy_set_header X-Client-Cert true;
        }
        location /v1/ {
            if ($request_method = OPTIONS) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }
            if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            }

            proxy_pass "http://server:8080/v1/";
            proxy_set_header X-Client-Cert true;
        }

        location /authentication.AsciiPayAuthentication {
            grpc_pass "grpc://server:8081";
            grpc_set_header X-Client-Cert true;
        }

        location / {
            proxy_pass "http://host.docker.internal:3000/";
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Client-Cert true;
        }
    }
}

# vim: syntax=nginx
